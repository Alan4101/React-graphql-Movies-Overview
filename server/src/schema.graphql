type Movies {
  page: Int!
  totalResults: Int!
  totalPages: Int!
  results: [Movie]!
}
type Movie {
  id: ID
  title: String!
  releaseDate: String!
  poster: String
  genre: [Genre]
  adult: Boolean
  overview: String
  originalLanguage: String
  backdropPath: String
  voteCount: Int
  video: Boolean
  voteAverage: Float
}

type Genre {
  id: ID!
  name: String
}
type MovieSelected {
  _id: ID
  title: String!
  releaseDate: String!
  poster: String
  genres: String
  adult: Boolean
  movieId: String
}
input MovieInput {
  title: String!
  releaseDate: String!
  poster: String
  genres: String
  adult: Boolean
}

type Query {
  movies(page: Int): Movies
  getSelectedMovies: [MovieSelected]
}
type Mutation {
  createMovie(
    title: String
    poster: String
    genres: String
    adult: Boolean
    releaseDate: String
    movieId: String
  ): MovieSelected

  deleteMovie(_id: ID): MovieSelected
}
